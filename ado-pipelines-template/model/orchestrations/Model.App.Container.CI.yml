parameters:
- name: containerServiceConnection
  type: string
- name: containerRegistryName
  type: string
- name: buildParameters
  type: object
  default: []
- name: buildContainerParameters
  type: object
  default: []
- name: publishHelmChartParameters
  type: object
  default: []

stages:
- stage: BuildApp
  displayName: Build App
  jobs:
  - template: ../Model.App.CI.yml
    parameters:
      technology: ${{ parameters.buildParameters.technology }}
      technologyParameters: ${{ parameters.buildParameters.technologyParameters }}
      artifactName: ${{ parameters.buildParameters.artifactName }}
      technologyLanguage: ${{ parameters.buildParameters.technologyLanguage }}

- stage: BuildContainer
  displayName: Build Container
  jobs:
  - template: ../Model.App.CI.yml
    parameters:
      technology: Container
      technologyParameters: ${{ parameters.buildContainerParameters.technologyParameters }}
      artifactName: ${{ parameters.buildContainerParameters.artifactName }}
      preBuildTasks:
      - download: current
        artifact: ${{ parameters.buildParameters.artifactName }}
      - task: ExtractFiles@1
        inputs:
          archiveFilePatterns: '$(Pipeline.Workspace)/${{ parameters.buildParameters.artifactName }}/*.zip' 
          destinationFolder: $(Pipeline.Workspace)/${{ parameters.buildParameters.artifactName }}/extract

- stage: PublishContainer
  displayName: Publish Container
  jobs:
  - job: PublishContainer
    steps:
    - template: ../../container/Container.PublishImage.yml
      parameters:
        dockerArtifactPipelineAlias: current
        dockerArtifactName: ${{ parameters.buildContainerParameters.artifactName }}
        dockerRepositoryName: ${{ parameters.buildContainerParameters.technologyParameters.dockerRepositoryName }}
        containerRegistryServiceConnection: ${{ parameters.containerServiceConnection }}
        containerRegistryName: ${{ parameters.containerRegistryName }}
        imageTag: $(Build.BuildNumber)

- stage: PublishHelm
  displayName: Publish Helm
  jobs:
  - job: PublishHelm
    steps:
    - template: ../../container/Container.PublishHelmChart.yml
      parameters:
        containerRegistryServiceConnection: ${{ parameters.containerServiceConnection }}
        chartPath: ${{ parameters.publishHelmChartParameters.chartPath }}
        chartName: ${{ parameters.publishHelmChartParameters.chartName }}
        chartVersion: $(Build.BuildNumber)
        containerRegistryName: ${{ parameters.containerRegistryName }}